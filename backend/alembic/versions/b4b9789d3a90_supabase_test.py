"""supabase test

Revision ID: b4b9789d3a90
Revises: 728c41137127
Create Date: 2025-05-26 12:32:17.308398

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'b4b9789d3a90'
down_revision: Union[str, None] = '728c41137127'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index(op.f('ix_badges_id'), 'badges', ['id'], unique=False)
    op.create_index(op.f('ix_badges_name'), 'badges', ['name'], unique=True)
    op.drop_constraint(op.f('health_flags_name_key'), 'health_flags', type_='unique')
    op.create_index(op.f('ix_health_flags_id'), 'health_flags', ['id'], unique=False)
    op.create_index(op.f('ix_health_flags_name'), 'health_flags', ['name'], unique=True)
    op.alter_column('history', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('history', 'product_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('history', 'text_content',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.create_index(op.f('ix_history_id'), 'history', ['id'], unique=False)
    op.drop_constraint(op.f('history_user_id_fkey'), 'history', type_='foreignkey')
    op.drop_constraint(op.f('history_product_id_fkey'), 'history', type_='foreignkey')
    op.create_foreign_key(None, 'history', 'products', ['product_id'], ['id'])
    op.create_foreign_key(None, 'history', 'users', ['user_id'], ['id'])
    op.alter_column('products', 'image_url',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('products', 'categories',
               existing_type=postgresql.ARRAY(sa.TEXT()),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('products', 'brands',
               existing_type=postgresql.ARRAY(sa.TEXT()),
               type_=sa.String(),
               existing_nullable=True)
    op.create_index(op.f('ix_products_barcode'), 'products', ['barcode'], unique=True)
    op.create_index(op.f('ix_products_id'), 'products', ['id'], unique=False)
    op.create_index(op.f('ix_products_name'), 'products', ['name'], unique=False)
    op.alter_column('reviews', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('reviews', 'product_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.create_index(op.f('ix_reviews_id'), 'reviews', ['id'], unique=False)
    op.drop_constraint(op.f('reviews_user_id_fkey'), 'reviews', type_='foreignkey')
    op.drop_constraint(op.f('reviews_product_id_fkey'), 'reviews', type_='foreignkey')
    op.create_foreign_key(None, 'reviews', 'users', ['user_id'], ['id'])
    op.create_foreign_key(None, 'reviews', 'products', ['product_id'], ['id'])
    op.drop_constraint(op.f('user_badge_badge_id_fkey'), 'user_badges', type_='foreignkey')
    op.drop_constraint(op.f('user_badge_user_id_fkey'), 'user_badges', type_='foreignkey')
    op.create_foreign_key(None, 'user_badges', 'badges', ['badge_id'], ['id'])
    op.create_foreign_key(None, 'user_badges', 'users', ['user_id'], ['id'])
    op.drop_column('user_badges', 'earned_at')
    op.drop_constraint(op.f('user_health_flags_health_flag_id_fkey'), 'user_health_flags', type_='foreignkey')
    op.drop_constraint(op.f('user_health_flags_user_id_fkey'), 'user_health_flags', type_='foreignkey')
    op.create_foreign_key(None, 'user_health_flags', 'health_flags', ['health_flag_id'], ['id'])
    op.create_foreign_key(None, 'user_health_flags', 'users', ['user_id'], ['id'])
    op.alter_column('users', 'name',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.drop_constraint(op.f('User_email_key'), 'users', type_='unique')
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_name'), 'users', ['name'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_name'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.create_unique_constraint(op.f('User_email_key'), 'users', ['email'], postgresql_nulls_not_distinct=False)
    op.alter_column('users', 'name',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.drop_constraint(None, 'user_health_flags', type_='foreignkey')
    op.drop_constraint(None, 'user_health_flags', type_='foreignkey')
    op.create_foreign_key(op.f('user_health_flags_user_id_fkey'), 'user_health_flags', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(op.f('user_health_flags_health_flag_id_fkey'), 'user_health_flags', 'health_flags', ['health_flag_id'], ['id'], ondelete='CASCADE')
    op.add_column('user_badges', sa.Column('earned_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'user_badges', type_='foreignkey')
    op.drop_constraint(None, 'user_badges', type_='foreignkey')
    op.create_foreign_key(op.f('user_badge_user_id_fkey'), 'user_badges', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(op.f('user_badge_badge_id_fkey'), 'user_badges', 'badges', ['badge_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'reviews', type_='foreignkey')
    op.drop_constraint(None, 'reviews', type_='foreignkey')
    op.create_foreign_key(op.f('reviews_product_id_fkey'), 'reviews', 'products', ['product_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(op.f('reviews_user_id_fkey'), 'reviews', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_reviews_id'), table_name='reviews')
    op.alter_column('reviews', 'product_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('reviews', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_index(op.f('ix_products_name'), table_name='products')
    op.drop_index(op.f('ix_products_id'), table_name='products')
    op.drop_index(op.f('ix_products_barcode'), table_name='products')
    op.alter_column('products', 'brands',
               existing_type=sa.String(),
               type_=postgresql.ARRAY(sa.TEXT()),
               existing_nullable=True)
    op.alter_column('products', 'categories',
               existing_type=sa.String(),
               type_=postgresql.ARRAY(sa.TEXT()),
               existing_nullable=True)
    op.alter_column('products', 'image_url',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.drop_constraint(None, 'history', type_='foreignkey')
    op.drop_constraint(None, 'history', type_='foreignkey')
    op.create_foreign_key(op.f('history_product_id_fkey'), 'history', 'products', ['product_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(op.f('history_user_id_fkey'), 'history', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_history_id'), table_name='history')
    op.alter_column('history', 'text_content',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('history', 'product_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('history', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_index(op.f('ix_health_flags_name'), table_name='health_flags')
    op.drop_index(op.f('ix_health_flags_id'), table_name='health_flags')
    op.create_unique_constraint(op.f('health_flags_name_key'), 'health_flags', ['name'], postgresql_nulls_not_distinct=False)
    op.drop_index(op.f('ix_badges_name'), table_name='badges')
    op.drop_index(op.f('ix_badges_id'), table_name='badges')
    # ### end Alembic commands ###
